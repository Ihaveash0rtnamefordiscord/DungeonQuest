if shared.whitelist_key == "Beta_Tester" then
local Tables = {
    particle = "reset",
    effects = "bloodhit",
    network = "send",
    camera = "angles",
    vector = "toanglesyx",
    hud = "getplayerhealth",
    replication = "getbodyparts",
    input = "mouse",
    gamelogic = "gammo",
    char = "setbasewalkspeed",
    char2 = "jump"
    

}

function Search(value)
    for i, v in pairs(getgc(true)) do
        if type(v) == "table" and rawget(v, value) then
            return v
        end
    end
end

for i, v in pairs(Tables) do
    getgenv()[i] = Search(v)
    for o, b in pairs(getgenv()[i]) do
        if type(b) == "function" then
            getgenv()[o] = b
        end
    end
end

local Services = setmetatable({
  LocalPlayer = game:GetService("Players").LocalPlayer,
  Camera = workspace.CurrentCamera,
  Workspace = game:GetService("Workspace")
}, {
  __index = function(self, idx)
    return rawget(self, idx) or game:GetService(idx)
  end
})

local Funcs = {}

function Funcs:Round(number)
  return math.floor(tonumber(number) + 0.5)
end

function Funcs:DrawSquare()
  local Box = Drawing.new("Square")
  Box.Color = Color3.fromRGB(190, 190, 0)
  Box.Thickness = 0.5
  Box.Filled = false
  Box.Transparency = 1
  return Box
end

function Funcs:DrawLine()
  local line = Drawing.new("Line")
  line.Color = Color3.new(190, 190, 0)
  line.Thickness = 0.5
  return line
end

function Funcs:DrawText()
  local text = Drawing.new("Text")
  text.Color = Color3.fromRGB(190, 190, 0)
  text.Size = 20
  text.Outline = true
  text.Center = true
  return text
end

function Funcs:GetCharacter(player)
  return plrs[player]
end

function Funcs:IsAlive(character)
  if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Head") and character ~= Funcs:GetLocalCharacter() then
    for i, v in pairs(game:GetService("Workspace").Players.Phantoms:GetChildren()) do
      if v == game.Players.LocalPlayer.Character then
        return true
      end
    end
    for i, v in pairs(game:GetService("Workspace").Players.Ghosts:GetChildren()) do
      if v == game.Players.LocalPlayer.Character then
        return true
      end
    end
  end
end

function Funcs:GetLocalCharacter()
  for i,v in pairs(game:GetService("Workspace").Players.Ghosts:GetChildren()) do
    if v:FindFirstChild("Humanoid") then
      return v
    end
  end
  for i,v in pairs(game:GetService("Workspace").Players.Phantoms:GetChildren()) do
    if v:FindFirstChild("Humanoid") then
      return v
    end
  end
end

if syn then 
	game.StarterGui:SetCore("SendNotification", {
		Title = "BorkWare"; 
		Text = "Welcome " .. game.Players.LocalPlayer.Name ..  " Thanks For Using BorkWare!";
		Icon = ""; 
		Duration = 5; 
	})
else
game.Players.LocalPlayer:Kick("Error 2: Please use a Compatible Exploit (Synapse X)")
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Ihaveash0rtnamefordiscord/Releases/main/IrisBetterCompat"))() 
end
local color = Color3.fromRGB(196, 40, 28)
local Config = {
	WindowName = "BorkWare - The Best Hub for Shit Games",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightShift,

}


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Ihaveash0rtnamefordiscord/Releases/main/AlexR32CSGO"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Main")
local Tab2 = Window:CreateTab("GunMods")
local Tab3 = Window:CreateTab("Visuals")
local Tab4 = Window:CreateTab("Settings")


local Section1 = Tab1:CreateSection("Combat")
local Section2 = Tab1:CreateSection("Character")
local Section3 = Tab2:CreateSection("GunMods")
local Section4 = Tab3:CreateSection("Visuals")
local Section3 = Tab4:CreateSection("Menu")
local Section5 = Tab4:CreateSection("Background")
local Credits = Tab4:CreateSection("Credits")




getgenv().walkspeed = 16
getgenv().JumpPower = 3


Section4:CreateToggle("Boxes", nil, function(State)
getgenv().BoxEsp = State
end)

Section4:CreateToggle("Tracers", nil, function(State)
getgenv().Tracer = State
end)

local Dropdown3 = Section4:CreateDropdown("Tracers Position")
Dropdown3:AddOption("Top", function(String)
getgenv().TracerOrigin = String
end)
Dropdown3:AddOption("Middle", function(String)
getgenv().TracerOrigin = String
end)
Dropdown3:AddOption("Bottom", function(String)
getgenv().TracerOrigin = String
end)

getgenv().TeamColor = Color3.fromRGB(0,145,44)
Section4:CreateColorpicker("Team Esp", function(Color)
	getgenv().TeamColor = Color
end)
getgenv().EnemyColor = Color3.fromRGB(252,0,0)
Section4:CreateColorpicker("Enemy Esp", function(Color)
	getgenv().EnemyColor = Color
end)

Section4:CreateColorpicker("Ambiet", function(Color)
	game:GetService("Lighting").MapSaturation.TintColor = Color
end)

Section4:CreateColorpicker("World Ambiet", function(Color)
	game:GetService("Lighting").OutdoorAmbient = Color
end)


Section4:CreateSlider("Time Of Day",0,24,nil,true, function(Value)
game:GetService("Lighting").ClockTime = Value
end)



function Funcs:AddEsp(player)
  local bottomrightone = Funcs:DrawLine()
  local bottomleftone = Funcs:DrawLine()
  local toprightone = Funcs:DrawLine()
  local topleftone = Funcs:DrawLine()
  local toplefttwo = Funcs:DrawLine()
  local bottomlefttwo = Funcs:DrawLine()
  local toprighttwo = Funcs:DrawLine()
  local bottomrighttwo = Funcs:DrawLine()
  local box = Funcs:DrawSquare()
  local tracer = Funcs:DrawLine()
  Services.RunService.Stepped:Connect(function()
    if debug.getupvalues(replication.getbodyparts)[1][player] and Funcs:IsAlive(debug.getupvalues(replication.getbodyparts)[1][player].head.Parent) and player.Team ~= Services.LocalPlayer.Team then
      bottomrightone.Color = getgenv().EnemyColor
      bottomleftone.Color = getgenv().EnemyColor
      toprightone.Color = getgenv().EnemyColor
      topleftone.Color = getgenv().EnemyColor
      toplefttwo.Color = getgenv().EnemyColor
      bottomlefttwo.Color = getgenv().EnemyColor
      toprighttwo.Color = getgenv().EnemyColor
      bottomrighttwo.Color = getgenv().EnemyColor
      box.Color = getgenv().EnemyColor
      tracer.Color = getgenv().EnemyColor
    else
      bottomrightone.Color = getgenv().TeamColor
      bottomleftone.Color = getgenv().TeamColor
      toprightone.Color = getgenv().TeamColor
      topleftone.Color = getgenv().TeamColor
      toplefttwo.Color = getgenv().TeamColor
      bottomlefttwo.Color = getgenv().TeamColor
      toprighttwo.Color = getgenv().TeamColor
      bottomrighttwo.Color = getgenv().TeamColor
      box.Color = getgenv().TeamColor
      tracer.Color = getgenv().TeamColor
    end 

    if debug.getupvalues(replication.getbodyparts)[1][player] and Funcs:IsAlive(debug.getupvalues(replication.getbodyparts)[1][player]["head"].Parent) and debug.getupvalues(replication.getbodyparts)[1][player].rootpart then
      local RootPosition, OnScreen = Services.Camera:WorldToViewportPoint(debug.getupvalues(replication.getbodyparts)[1][player]["rootpart"].Position)
      local HeadPosition = Services.Camera:WorldToViewportPoint(debug.getupvalues(replication.getbodyparts)[1][player]["head"].Position + Vector3.new(0, 0, 0))
      local LegPosition = Services.Camera:WorldToViewportPoint(debug.getupvalues(replication.getbodyparts)[1][player]["rootpart"].Position - Vector3.new(0, 5, 0))
      local length = RootPosition.Y - ((HeadPosition.Y - LegPosition.Y) / 2)
      local lengthx = RootPosition.X - ((HeadPosition.Y - LegPosition.Y) / 2)
      local size = HeadPosition.Y - LegPosition.Y
      
      if getgenv().BoxEsp then
        box.Visible = OnScreen
        box.Size = Vector2.new(HeadPosition.Y - LegPosition.Y, HeadPosition.Y - LegPosition.Y)
        box.Position = Vector2.new(RootPosition.X - ((HeadPosition.Y - LegPosition.Y) / 2), RootPosition.Y - ((HeadPosition.Y - LegPosition.Y) / 2))
      else
        box.Visible = false
      end

      if getgenv().Tracer then
        tracer.Visible = OnScreen
        if getgenv().TracerOrigin == "Top" then
          tracer.To = Vector2.new(Services.Camera.ViewportSize.X / 2, 0)
          tracer.From = Vector2.new(RootPosition.X - 1, RootPosition.Y + (HeadPosition.Y - LegPosition.Y) / 2)
        elseif getgenv().TracerOrigin == "Middle" then
          tracer.To = Vector2.new(Services.Camera.ViewportSize.X / 2, Services.Camera.ViewportSize.Y / 2)
          tracer.From = Vector2.new(RootPosition.X - 1, (RootPosition.Y + (HeadPosition.Y - LegPosition.Y) / 2) - ((HeadPosition.Y - LegPosition.Y) / 2))
        elseif getgenv().TracerOrigin == "Bottom" then
          tracer.To = Vector2.new(Services.Camera.ViewportSize.X / 2, 1000)
          tracer.From = Vector2.new(RootPosition.X - 1, RootPosition.Y - (HeadPosition.Y - LegPosition.Y) / 2)
        end
      else
        tracer.Visible = false
      end
    else
      bottomrightone.Visible = false
      bottomleftone.Visible = false
      toprightone.Visible = false
      topleftone.Visible = false
      toplefttwo.Visible = false
      bottomlefttwo.Visible = false
      toprighttwo.Visible = false
      bottomrighttwo.Visible = false
      box.Visible = false
      tracer.Visible = false
    end
  end)
end

for i, v in pairs(Services.Players:GetPlayers()) do
  if v ~= Services.LocalPlayer then
    Funcs:AddEsp(v)
  end
end

Services.Players.PlayerAdded:Connect(function(player)
  if v ~= Services.LocalPlayer then
    Funcs:AddEsp(player)
  end
end)



Section1:CreateToggle("Silent-Aim", nil, function(State)
getgenv().Silent = State
end)

getgenv().Aimbone = "head"
local Dropdown3 = Section1:CreateDropdown("Aimbone")
Dropdown3:AddOption("Head", function()
getgenv().Aimbone = "head"
end)
Dropdown3:AddOption("Torso", function()
getgenv().Aimbone = "rootpart"
end)

getgenv().TargetDistance = math.huge
Section1:CreateSlider("Target Distance",20,100000,nil,false, function(Value)
getgenv().TargetDistance = Value
end)

getgenv().FOV = 100
Section1:CreateSlider("FOV ",10,1000,nil,false, function(Value)
getgenv().FOV = Value
end)

getgenv().DrawFOV = false
Section1:CreateToggle("DrawFOV", nil, function(State)
getgenv().DrawFOV = State
end)

Section2:CreateSlider("WalkSpeed",16,50,nil,false, function(Value)
getgenv().walkspeed = Value
end)
Section2:CreateSlider("JumpPower",3,20,nil,false, function(Value)
getgenv().JumpPower = Value
end)

Section2:CreateToggle("BHOP (Bunny Hop)", nil, function(State)
getgenv().BHOP = State
end)


Section2:CreateToggle("No Fall Damage", nil, function(State)
getgenv().LowFallDamage = State
end)





   game:GetService("RunService").RenderStepped:Connect(function()


function char.setbasewalkspeed(self, Speed)
    return setbasewalkspeed(self, getgenv().walkspeed)
end

function char2.jump(self, Jump)
    return jump(self, getgenv().JumpPower)
end

if getgenv().BHOP then
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Humanoid then
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end
end
end)





--Thanks IRay for the offset finder :heart:

local Mouse = game.Players.LocalPlayer:GetMouse()
function ClosestPenis2ME() 
    local Plr = nil
    local SD = getgenv().TargetDistance
        for i, v in pairs(game:GetService('Players'):GetPlayers()) do
        if v.Name ~= game:GetService("Players").LocalPlayer.Name and v.Team ~= game:GetService("Players").LocalPlayer.Team and debug.getupvalues(replication.getbodyparts)[1][v] then
                    local pos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(debug.getupvalues(replication.getbodyparts)[1][v]["head"].Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude;
                    if onScreen and magnitude < SD then
                        Plr = v
                        SD = magnitude
                    end
                end
        end  
    return Plr
end


-- // Modified Silent-Aim not finished product
ReplicatedPosition = require(game:GetService("ReplicatedFirst").SharedModules.Old.Utilities.Math.physics:Clone()) --Math <3

local BluwuWiFi = network.send--hooky
network.send = function(self, name, ...)--blah blah
    local args = {...}
if name == "falldamage" and getgenv().LowFallDamage then --fall damage
            return nan -- -nan(ind)
            end
        if name == "newbullets" then --cals on shot because the arg is for newbullets blah blah
            local Plr = ClosestPenis2ME()

            if Plr and getgenv().Silent then --Check for player and if silent is on
                args[1].firepos = gamelogic.currentgun.barrel.Position --Gun Location when we fire
                args[1].camerapos = camera.basecframe * Vector3.new(0, 0, 0.5) --Where we are on bullet fired
                for i,v in next, args[1].bullets do--Edits Table pos
                    if Plr then -- testing if we found a player
                    v[1] = ReplicatedPosition.trajectory(gamelogic.currentgun.barrel.Position, Vector3.new(0, -196.2, 0), debug.getupvalues(replication.getbodyparts)[1][Plr].head.Position, gamelogic.currentgun.data.bulletspeed) --Bullet spoofing also for some reason trys to wallbang
                    end
            end
            end
        end

    return BluwuWiFi(self, name, unpack(args)) --Returns changes from above
end

local CumStains = particle.new
particle.new = function(data)
    if gamelogic.currentgun and gamelogic.currentgun.data and getgenv().Silent then
                local Plr = ClosestPenis2ME()
                 if Plr then
                data.position = debug.getupvalues(replication.getbodyparts)[1][Plr].head.Position --Gun End Pos
                data.visualorigin = gamelogic.currentgun.barrel.Position --Gun Start Pos
                data.velocity = ReplicatedPosition.trajectory(gamelogic.currentgun.barrel.Position, Vector3.new(0, -196.2, 0), debug.getupvalues(replication.getbodyparts)[1][Plr].head.Position, gamelogic.currentgun.data.bulletspeed) --Gun Movement Pos
        end
    end

    return CumStains(data)
end


local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)

Toggle3:SetState(true)
Credits:CreateLabel("Credits Teax For The Esp Lib")
Credits:CreateLabel("Credits Teax For offset finder <3")
Credits:CreateLabel("Credits AlexR32#3232 For The Ui")

local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section5:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option7:SetOption()

local Colorpicker4 = Section5:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section5:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section5:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)
  else
    game.Players.LocalPlayer:Kick('ERROR 3: Incorrect Key')
    wait(.45)
    while true do end
    end
